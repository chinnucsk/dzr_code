+   功能的开启
	*   主角的等级限制了该系统的开启（服务端先不加控制）

+   奴隶笼子
	*   最多有**6**个笼子，其中第**1、2**个是默认开启的，其他的需要官职和vip限制的

+   抓奴隶
	*   系统筛选：每次都随机选取4个不是奴隶且开启了奴隶功能的玩家
	*   直接抓好友为奴隶
	*   进入某个好友的封地中，如果他已被占领了，则可以打败他的奴隶主就可以把这个奴隶抢过来作为自己的奴隶
	*   需要战胜选取的玩家才能使其成为自己的奴隶

+   奴隶反抗奴隶主
	*   玩家若是奴隶的话，可以“起义”，战胜奴隶主就可以自由了

+   税金
	*   奴隶主将从他奴隶的每次押镖银币收益中获取**5%**的税金
	*   而成为奴隶的玩家将只能从每次押镖银币收获中收取**95%**

+   奴隶劳作
	*   奴隶主一共有**6**次机会让他的奴隶们进行劳作，次数隔天重置
		*   打猎：获得银币收益		
		*   翻地：获得军工收益		
		*   喂马：主角获得经验	
	*   劳作后直接获取收益，收益的多少根据每个奴隶的等级和劳作类型来确定
	*   每次劳作完，会有15分钟CD时间
	*   劳作CD可以花费最多15元宝清除，具体根据公式确定

+   奴隶有效时间
	*   获得的奴隶会**24**小时后自动释放
	*   奴隶主可以主动释放奴隶

+   其他
	*   奴隶主可以看到他有哪些奴隶
	*   奴隶可以看到他自己被谁（奴隶主昵称）占领了
	*   一旦一个奴隶成为了某个奴隶主的奴隶之后，他就不能再成为其他人的奴隶了

----

+   配置表需求
	*   可抓奴隶数量 | 笼子开启官职条件 | 笼子开启vip条件

----

+   设计
	*   奴隶的属性：
		*   自己的奴隶主
		*   成为奴隶后的奴役结束时间
		*   成为某个奴隶主的奴隶期间押镖所得的总银币收益产生的税金
	*   奴隶主的属性：
		*   有哪些奴隶
		*   每天的总共让奴隶劳作的次数
		*   下次能让奴隶劳作的开始时间
	*   数据库表设计
		*   奴隶主表：
			*   玩家id
			*   奴隶1的id（为-1的话说明笼子未开启；为0的话说明对应位置没有奴隶）
			*   奴隶2的id
			*   奴隶3的id
			*   奴隶4的id
			*   奴隶5的id
			*   奴隶6的id
			*   劳作次数
			*   劳作更新时间
			*   下次劳作的开始时间
		*   奴隶表：
			*   奴隶自己的id
			*   奴隶主的id（为0的话说明他没有被奴役）
			*   成为奴隶后的奴役结束时间
			*   成为某个奴隶主的奴隶期间押镖所得的总银币收益（奴隶主变更后重置）

+   实现
	*   使用两个gen_cache分别对应**奴隶主表**和**奴隶表**的数据缓存
	*   操作一个表时可能需要同时修改另一个表
	*   因为表的设计，使得获取奴隶的奴隶主或是获取奴隶主的奴隶都可以按关键字来查询了


